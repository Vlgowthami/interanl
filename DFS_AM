import java.util.*;

public class DFSAdjMatrix {
    private int vertices;
    private int[][] adjMatrix;

    public DFSAdjMatrix(int vertices) {
        this.vertices = vertices;
        adjMatrix = new int[vertices][vertices];
    }

    public void addEdge(int src, int dest) {
        adjMatrix[src][dest] = 1;
        adjMatrix[dest][src] = 1;
    }

    public void dfs(int start) {
        boolean[] visited = new boolean[vertices];
        dfsRecursive(start, visited);
    }

    private void dfsRecursive(int node, boolean[] visited) {
        visited[node] = true;
        System.out.print(node + " ");

        for (int i = 0; i < vertices; i++) {
            if (adjMatrix[node][i] == 1 && !visited[i]) {
                dfsRecursive(i, visited);
            }
        }
    }

    public static void main(String[] args) {
        DFSAdjMatrix graph = new DFSAdjMatrix(5);
        graph.addEdge(0, 1);
        graph.addEdge(0, 2);
        graph.addEdge(1, 3);
        graph.addEdge(1, 4);
        graph.addEdge(2, 4);
        graph.addEdge(3, 4);

        System.out.print("DFS Traversal: ");
        graph.dfs(0);
    }
}
